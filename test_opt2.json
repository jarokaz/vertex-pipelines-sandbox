name: TestTaskOp2
inputs:
- {name: project, type: String}
- {name: location, type: String}
- {name: sleep_time, type: Integer}
- {name: runners_image, type: String}
- {name: machine_type, type: String, default: n1-standard-8, optional: true}
outputs:
- {name: gcp_resources, type: typing.Dict}
implementation:
  container:
    image: gcr.io/jk-mlops-dev/app
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.12' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing\
      \ import *\n\ndef TestTaskOp2(\n    project: str,\n    location: str,\n    sleep_time:\
      \ int,\n    runners_image: str,\n    gcp_resources: OutputPath(Dict), \n   \
      \ machine_type: str='n1-standard-8',\n):\n\n    import logging\n    import time\n\
      \    import signal\n\n    def _exit_gracefully(signal_number, stack_frame):\n\
      \        logging.info(f'Received cancelation signal {signal_number}')\n    \
      \    raise RuntimeError('Cancellation')\n\n    signal.signal(signal.SIGTERM,\
      \ _exit_gracefully) \n\n    logging.info(f'Going to sleep for {sleep_time}')\n\
      \    time.sleep(sleep_time)\n    logging.info('Done sleeping')\n\n"
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - TestTaskOp2
